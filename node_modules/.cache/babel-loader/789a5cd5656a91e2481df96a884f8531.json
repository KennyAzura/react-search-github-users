{"ast":null,"code":"var _jsxFileName = \"F:\\\\App\\\\react-app\\\\github-users\\\\src\\\\components\\\\Repos.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../context/context';\nimport { ExampleChart, Pie3D, Column3D, Bar3D, Doughnut2D } from './Charts';\n\nconst Repos = () => {\n  const {\n    repos\n  } = useGlobalContext();\n  let languages = repos.reduce((total, item) => {\n    const {\n      language\n    } = item;\n    if (!language) return total;\n\n    if (!total[language]) {\n      total[language] = {\n        label: language,\n        value: 1\n      };\n    } else {\n      total[language] = { ...total[language],\n        value: total[language].value + 1\n      };\n    }\n\n    return total;\n  }, {});\n  languages = Object.values(languages).sort((a, b) => b.value - a.value).splice(0, 5);\n  console.log(languages);\n  const chartData = [{\n    label: \"HTML\",\n    value: \"13\"\n  }, {\n    label: \"CSS\",\n    value: \"23\"\n  }, {\n    label: \"Javasript\",\n    value: \"80\"\n  }];\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Pie3D, {\n    data: languages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ExampleChart, {\n    data: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  })));\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  justify-items: center;\n  gap: 2rem;\n  @media (min-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: 2fr 3fr;\n  }\n\n  div {\n    width: 100% !important;\n  }\n  .fusioncharts-container {\n    width: 100% !important;\n  }\n  svg {\n    width: 100% !important;\n    border-radius: var(--radius) !important;\n  }\n`;\nexport default Repos;","map":{"version":3,"sources":["F:/App/react-app/github-users/src/components/Repos.js"],"names":["React","styled","useGlobalContext","ExampleChart","Pie3D","Column3D","Bar3D","Doughnut2D","Repos","repos","languages","reduce","total","item","language","label","value","Object","values","sort","a","b","splice","console","log","chartData","Wrapper","div"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,QAA9B,EAAwCC,KAAxC,EAA+CC,UAA/C,QAAiE,UAAjE;;AACA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAACC,IAAAA;AAAD,MAAUP,gBAAgB,EAAhC;AACA,MAAIQ,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC5C,UAAM;AAACC,MAAAA;AAAD,QAAaD,IAAnB;AACA,QAAG,CAACC,QAAJ,EAAc,OAAOF,KAAP;;AACd,QAAG,CAACA,KAAK,CAACE,QAAD,CAAT,EAAqB;AACnBF,MAAAA,KAAK,CAACE,QAAD,CAAL,GAAkB;AAACC,QAAAA,KAAK,EAAED,QAAR;AAAkBE,QAAAA,KAAK,EAAE;AAAzB,OAAlB;AACD,KAFD,MAEO;AACLJ,MAAAA,KAAK,CAACE,QAAD,CAAL,GAAkB,EAAC,GAAGF,KAAK,CAACE,QAAD,CAAT;AAAqBE,QAAAA,KAAK,EAAEJ,KAAK,CAACE,QAAD,CAAL,CAAgBE,KAAhB,GAAwB;AAApD,OAAlB;AACD;;AACD,WAAOJ,KAAP;AACD,GATe,EASb,EATa,CAAhB;AAUAF,EAAAA,SAAS,GAAGO,MAAM,CAACC,MAAP,CAAcR,SAAd,EAAyBS,IAAzB,CAA8B,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACL,KAAF,GAAUI,CAAC,CAACJ,KAApD,EAA2DM,MAA3D,CAAkE,CAAlE,EAAoE,CAApE,CAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYd,SAAZ;AACA,QAAMe,SAAS,GAAG,CAChB;AACEV,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADgB,EAKhB;AACED,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALgB,EAShB;AACED,IAAAA,KAAK,EAAE,WADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GATgB,CAAlB;AAcA,sBAAO;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEN,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEe,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADK,CAAP;AAQD,CApCD;;AAsCA,MAAMC,OAAO,GAAGzB,MAAM,CAAC0B,GAAI;;;;;;;;;;;;;;;;;;;;;;CAA3B;AAwBA,eAAenB,KAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../context/context';\nimport { ExampleChart, Pie3D, Column3D, Bar3D, Doughnut2D } from './Charts';\nconst Repos = () => {\n  const {repos} = useGlobalContext()\n  let languages = repos.reduce((total, item) => {\n    const {language} = item\n    if(!language) return total;\n    if(!total[language]) {\n      total[language] = {label: language, value: 1}\n    } else {\n      total[language] = {...total[language], value: total[language].value + 1}\n    }\n    return total\n  }, {})\n  languages = Object.values(languages).sort((a, b) => b.value - a.value).splice(0,5)\n  console.log(languages)\n  const chartData = [\n    {\n      label: \"HTML\",\n      value: \"13\",\n    },\n    {\n      label: \"CSS\",\n      value: \"23\",\n    },\n    {\n      label: \"Javasript\",\n      value: \"80\",\n    },\n  ];\n  return <section className=\"section\">\n    <Wrapper className=\"section-center\">\n      <Pie3D data={languages}/>\n      <div></div>\n      <ExampleChart data={chartData}/>\n      <div></div>\n    </Wrapper>\n  </section>;\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  justify-items: center;\n  gap: 2rem;\n  @media (min-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: 2fr 3fr;\n  }\n\n  div {\n    width: 100% !important;\n  }\n  .fusioncharts-container {\n    width: 100% !important;\n  }\n  svg {\n    width: 100% !important;\n    border-radius: var(--radius) !important;\n  }\n`;\n\nexport default Repos;\n"]},"metadata":{},"sourceType":"module"}