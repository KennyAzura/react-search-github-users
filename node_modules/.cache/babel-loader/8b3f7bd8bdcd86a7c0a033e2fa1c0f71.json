{"ast":null,"code":"var _jsxFileName = \"F:\\\\App\\\\react-app\\\\github-users\\\\src\\\\context\\\\context.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport mockUser from './mockData.js/mockUser';\nimport mockRepos from './mockData.js/mockRepos';\nimport mockFollowers from './mockData.js/mockFollowers';\nimport axios from 'axios';\nconst rootUrl = 'https://api.github.com';\nconst GithubContext = React.createContext();\n\nconst GithubProvider = ({\n  children\n}) => {\n  const [githubUser, setGithubUser] = useState(mockUser);\n  const [repos, setRepos] = useState(mockRepos);\n  const [followers, setFollowers] = useState(mockFollowers);\n  return /*#__PURE__*/React.createElement(GithubContext.Provider, {\n    value: {\n      githubUser,\n      repos,\n      followers\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }\n  }, children);\n};\n\nexport const useGlobalContext = () => {\n  return useContext(GithubContext);\n};\nexport { GithubProvider, GithubContext };","map":{"version":3,"sources":["F:/App/react-app/github-users/src/context/context.js"],"names":["React","useState","useEffect","useContext","mockUser","mockRepos","mockFollowers","axios","rootUrl","GithubContext","createContext","GithubProvider","children","githubUser","setGithubUser","repos","setRepos","followers","setFollowers","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,wBAAhB;AAEA,MAAMC,aAAa,GAAGT,KAAK,CAACU,aAAN,EAAtB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACnC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAACG,QAAD,CAA5C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAACI,SAAD,CAAlC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAACK,aAAD,CAA1C;AACA,sBAAO,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACO,MAAAA,UAAD;AAAaE,MAAAA,KAAb;AAAoBE,MAAAA;AAApB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgEL,QAAhE,CAAP;AACH,CALD;;AAOA,OAAO,MAAMO,gBAAgB,GAAG,MAAM;AAClC,SAAOhB,UAAU,CAACM,aAAD,CAAjB;AACH,CAFM;AAIP,SAAQE,cAAR,EAAwBF,aAAxB","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport mockUser from './mockData.js/mockUser';\nimport mockRepos from './mockData.js/mockRepos';\nimport mockFollowers from './mockData.js/mockFollowers';\nimport axios from 'axios';\n\nconst rootUrl = 'https://api.github.com';\n\nconst GithubContext = React.createContext()\n\nconst GithubProvider = ({children}) => {\n    const [githubUser, setGithubUser] = useState(mockUser)\n    const [repos, setRepos] = useState(mockRepos)\n    const [followers, setFollowers] = useState(mockFollowers)\n    return <GithubContext.Provider value={{githubUser, repos, followers}}>{children}</GithubContext.Provider>\n}\n\nexport const useGlobalContext = () => {\n    return useContext(GithubContext)\n}\n\nexport {GithubProvider, GithubContext}"]},"metadata":{},"sourceType":"module"}